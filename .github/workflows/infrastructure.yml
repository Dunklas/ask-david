name: infrastructure
on:
  push:
    branches:
      - main
    paths:
      - iac/**
      - .github/workflows/*
  pull_request:
    branches:
      - main
    paths:
      - iac/*
      - .github/workflows/*
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  verify:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: iac
    steps:
      - uses: actions/checkout@v5
      - uses: hashicorp/setup-terraform@v3
      - run: terraform init -input=false -backend=false
      - run: terraform validate
      - run: terraform fmt --check --diff
      - name: trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: config
          scan-ref: iac
          exit-code: '1'
          severity: 'CRITICAL,HIGH'
          trivyignores: iac/.trivyignore
  
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: iac
    steps:
      - uses: actions/checkout@v5
      - uses: hashicorp/setup-terraform@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: eu-west-2
      - name: terraform init
        run: |
          terraform init -input=false \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=${{ env.TF_STATE_KEY }}"
        env:
          TF_STATE_KEY: ask-david.tfstate
      - name: terraform plan
        run: |
          terraform plan \
            -var="hosted_zone_id=${{ secrets.HOSTED_ZONE_ID }}" \
            -var="web_domain=${{ secrets.WEB_DOMAIN }}" \
            -out=tfplan \
            -input=false
      - name: terraform apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        run: |
          terraform apply -input=false tfplan
